name: Build and Package
on: [push]

jobs:
  build-mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '19'
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        npm i
        npm i appdmg
    - name: Package
      run: npm run make
    - name: Upload DMG
      uses: actions/upload-artifact@v2
      with:
        name: purerefAnimated-dmg
        path: out/make/**/purerefAnimated-*.dmg
    - name: Upload ZIP (macOS)
      uses: actions/upload-artifact@v2
      with:
        name: purerefAnimated-mac-zip
        path: out/make/**/purerefAnimated-darwin-arm64-*.zip
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
      
      - name: Install Flatpak dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y flatpak flatpak-builder elfutils dpkg rpm
          flatpak --user remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          git config --global protocol.file.allow always

      - name: Package for Linux
        run: npm run make

      - name: Upload Flatpak
        uses: actions/upload-artifact@v2
        with:
          name: purerefAnimated-flatpak
          path: out/make/**/io.atom.electron.purerefAnimated_stable_x86_64.flatpak
      
      - name: Upload RPM
        uses: actions/upload-artifact@v2
        with:
          name: purerefAnimated-rpm
          path: out/make/**/purerefAnimated-*.rpm
      
      - name: Upload DEB
        uses: actions/upload-artifact@v2
        with:
          name: purerefAnimated-deb
          path: out/make/**/purerefanimated_*.deb   
  build-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '19'
      - name: Install dependencies
        run: npm i
      - name: Package
        run: npm run make
      - name: Upload EXE
        uses: actions/upload-artifact@v2
        with:
          name: purerefAnimated-exe
          path: out/make/**/purerefAnimated-*Setup.exe
      - name: Upload ZIP (Windows)
        uses: actions/upload-artifact@v2
        with:
          name: purerefAnimated-win-zip
          path: out/make/**/purerefAnimated-win32-x64-*.zip
  create-release:
    needs: [build-mac, build-linux, build-win]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
   
    - name: Download Artifacts
      uses: actions/download-artifact@v2

    
    - name: Extract Artifacts
      run: |
        mkdir -p extracted
        find . -name "*.zip" -exec unzip {} -d extracted/ \;
   
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: true
        prerelease: false
     
    - name: Upload DMG to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/**/purerefAnimated-*.dmg
        asset_name: purerefAnimated-*.dmg
        asset_content_type: application/octet-stream
    - name: Upload macOS ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/**/purerefAnimated-darwin-arm64-*.zip
        asset_name: purerefAnimated-darwin-arm64-*.zip
        asset_content_type: application/zip

    - name: Upload RPM to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/**/purerefAnimated-*.rpm
        asset_name: purerefAnimated-*.rpm
        asset_content_type: application/x-rpm

    - name: Upload DEB to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/**/purerefanimated_*.deb
        asset_name: purerefanimated_*.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload Flatpak to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/**/io.atom.electron.purerefAnimated_stable_x86_64.flatpak
        asset_name: io.atom.electron.purerefAnimated_stable_x86_64.flatpak
        asset_content_type: application/octet-stream

    - name: Upload Windows EXE to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/**/purerefAnimated-*Setup.exe
        asset_name: purerefAnimated-* Setup.exe
        asset_content_type: application/octet-stream

    - name: Upload Windows ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: extracted/**/purerefAnimated-win32-x64-*.zip
        asset_name: purerefAnimated-win32-x64-*.zip
        asset_content_type: application/zip
